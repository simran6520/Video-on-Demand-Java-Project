
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import com.teamdev.jxbrowser.browser.Browser;
import com.teamdev.jxbrowser.engine.Engine;
import com.teamdev.jxbrowser.engine.EngineOptions;
import static com.teamdev.jxbrowser.engine.RenderingMode.HARDWARE_ACCELERATED;
import com.teamdev.jxbrowser.navigation.event.NavigationStarted;
import com.teamdev.jxbrowser.view.swing.BrowserView;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Simran
 */
public class User_View_Courses extends javax.swing.JFrame {

    /**
     * Creates new form User_View_Courses
     */
    int width,height;
    course_detail obj;
    String username;
    boolean ispaid=false;
    public User_View_Courses(course_detail obj,String username) {
        initComponents();
        
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        
        width=d.width;
        height=d.height;
        
        setVisible(true);
        setSize(width,height);
        
        getContentPane().setBackground(Color.CYAN);
        jPanel1.setBounds(10,10,width,130);
        jScrollPane1.setBounds(10,150,width,130);
        
        this.obj=obj;
        this.username=username;
        
        jname.setText(obj.coursename);
        jdesc.setText(obj.desc);
        jprice.setText("Price: "+obj.price+"");
        
        
        check_user_paid_or_not();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jname = new javax.swing.JLabel();
        jdesc = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jprice = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jmainpanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 153, 102));
        jPanel1.setLayout(null);
        jPanel1.add(jname);
        jname.setBounds(16, 26, 180, 36);
        jPanel1.add(jdesc);
        jdesc.setBounds(30, 80, 190, 40);

        jButton1.setText("Sample Video");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(560, 40, 204, 57);

        jButton2.setText("Pay Now");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(808, 42, 203, 57);

        jprice.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jprice.setText("jLabel1");
        jPanel1.add(jprice);
        jprice.setBounds(311, 20, 230, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1140, 200);

        jmainpanel.setBackground(new java.awt.Color(0, 204, 255));
        jmainpanel.setLayout(null);
        jScrollPane2.setViewportView(jmainpanel);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 200, 1140, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
         EngineOptions options =EngineOptions.newBuilder(HARDWARE_ACCELERATED)
                .licenseKey("1BNDHFSC1G0GTLKYTRMWIIUXXP4LCOOPD7SMJ40JC2A4OAW47LR07S95NXP863INQE88UN").build();
        Engine engine = Engine.newInstance(options);
        Browser browser = engine.newBrowser();
         SwingUtilities.invokeLater(() -> {
             BrowserView view = BrowserView.newInstance(browser);
             JFrame frame = new JFrame("payment demo");
             frame.addWindowListener(new WindowAdapter() {
                 public void windowClosing(WindowEvent e)
                 {
                     System.out.println("engine closed");
                    engine.close();
                 }
                 });
             frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
//             int amount =12345;
             browser.navigation().on(NavigationStarted.class,event ->{
                 String url = event.url();
                 System.out.println("url:"+url);
                 if(url.contains("BookingSuccess.html"))
                 {
                     String ss = url.substring(url.indexOf("?")+1);
                     String id = ss.substring(ss.indexOf("=")+1);
                    
                     frame.dispose();
                       pay_now();
                 }
             });
             browser.navigation().loadUrl("http://amrinder.vmm.education/paymentdemo.html?amount="+obj.price+"&name=vod&desc=VOD&photo=https://images-na.ssl-images-amazon.com/images/I/661yMQIMMODL._SY606_.jpg");
             frame.add(view,BorderLayout.CENTER);
             frame.setSize(1000, 700);
             frame.setLocationRelativeTo(null);
             frame.setVisible(true);
         });
     
     
     
         
       //
    

                                                 
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JavaFXMediaPlayerFrame ob = new JavaFXMediaPlayerFrame(obj.video);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_View_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_View_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_View_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_View_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new User_View_Courses().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jdesc;
    private javax.swing.JPanel jmainpanel;
    private javax.swing.JLabel jname;
    private javax.swing.JLabel jprice;
    // End of variables declaration//GEN-END:variables

   public void pay_now()
    {
     try {
            // TODO add your handling code here:
            
            HttpResponse<String>httpres=Unirest.get(GlobalClass.ip+"subscription")
                    .queryString("course_name",obj.coursename)
                    .queryString("user_name",username)
                    .asString();
            
            
            if(httpres.getStatus()==200)
            {
                String ans=httpres.getBody();
                JOptionPane.showMessageDialog(rootPane,ans);
                check_user_paid_or_not();
                
            }}
         catch (Exception e) {
            e.printStackTrace();
        }
    
    }

 public void fetch_video_lectures()
 {
   try {
       
         
            HttpResponse<String> httpResponse=Unirest.get(GlobalClass.ip+"view_videos")
                    .queryString("coursename",obj.coursename)
                    .asString();
            
            if(httpResponse.getStatus()==200)
            {
             String ans=httpResponse.getBody();
             jmainpanel.removeAll();
             
              StringTokenizer st=new StringTokenizer(ans,"~~");
              
              int count=st.countTokens();
              int x=10,y=10;
              int i=0;
              
              lectures_pannels lp[]=new lectures_pannels[count];
              jmainpanel.setPreferredSize(new Dimension(width+1000,220*count));
              
              
                while(st.hasMoreTokens())
                {
                 String res2=st.nextToken();
                 StringTokenizer st2=new StringTokenizer(res2,";;");
                        
                         
                          
                 int video_id=Integer.parseInt(st2.nextToken());
                 int lecture_no=Integer.parseInt(st2.nextToken());
                 String video_path=st2.nextToken();
                 String video_thumbnails=st2.nextToken();
                 String duration=st2.nextToken();
                 String title=st2.nextToken();
                 
                 lp[i]=new lectures_pannels();
                 
                 lp[i].setBounds(x,y,200,300);
                 x=x+220;
                 
                 lp[i].jpic.setText(video_thumbnails);
                 
                  
                         try {
                        URL uri = new URL(GlobalClass.ip + "GetResource/" + video_thumbnails);
                        System.out.println(uri);
                        BufferedImage im = ImageIO.read(uri);
                        BufferedImage im2 = GlobalClass.resizephoto(im, lp[i].jpic.getWidth(), lp[i].jpic.getHeight());
                        lp[i].jpic.setIcon(new ImageIcon(im2));

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                 lp[i].jtitle.setText(title);
                 lp[i].jduration.setText(duration);
                 
                 if(ispaid)
                 {
                  lp[i].jButton_download.setEnabled(true);
                  lp[i].jButton_play.setEnabled(true);
                  
                 }
                 else
                 {
                 lp[i].jButton_download.setEnabled(false);
                  lp[i].jButton_play.setEnabled(false);
                 }
                 
                  lp[i].jButton_play.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
//                            super.mouseClicked(e); //To change body of generated methods, choose Tools | Templates.
                    
                        JavaFXMediaPlayerFrame jfmp = new JavaFXMediaPlayerFrame(video_path);
                        
                        }

                    
                        
                    });
                    
                     lp[i].jButton_download.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
//                            super.mouseClicked(e); //To change body of generated methods, choose Tools | Templates.
                       
                                        int ans = JOptionPane.showConfirmDialog(rootPane, "Are you sure You want to download", "Please wait..", JOptionPane.YES_NO_OPTION);
                                        
                                        if (ans == JOptionPane.YES_OPTION) {
                                            
                                            System.out.println("yes");
                                            
                                            CustomerDownloadVideo obj = new CustomerDownloadVideo(video_path);
                                            
                                        } else {
                                            System.out.println("Noo");
                                            
                                        } 
                        }

                    
                        
                    });
                    
                    
                    
                    
                 
                 jmainpanel.add(lp[i]);
                 jmainpanel.repaint();
                 repaint();
                 
                
                 
                i++;
                }
                
            }
        } catch (UnirestException ex) {
            Logger.getLogger(Admin_Manage_Videos.class.getName()).log(Level.SEVERE, null, ex);
        }
                                            
 
 

}
 
 public void check_user_paid_or_not()
 {
  try {
            // TODO add your handling code here:
            
            HttpResponse<String>httpres=Unirest.get(GlobalClass.ip+"check")
                    .queryString("course_name",obj.coursename)
                    .queryString("user_name",username)
                    .asString();
            
            
            if(httpres.getStatus()==200)
            {
                String ans=httpres.getBody();
                if(ans.equals("success")){
                    jButton2.setEnabled(false);
                    ispaid=true;
                }
                else
                {
                 ispaid=false;
                }
                fetch_video_lectures();
            }}
         catch (Exception e) {
            e.printStackTrace();
        }
        
 }
}
