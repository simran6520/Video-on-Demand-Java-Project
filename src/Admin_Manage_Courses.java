
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Simran
 */
public class Admin_Manage_Courses extends javax.swing.JFrame {

    /**
     * Creates new form Admin_Manage_Courses
     */
    int width,height;
    String categoryname="";
    JFileChooser jfc=new JFileChooser();
    File wide_image_obj,square_image_obj,video_obj;
    ArrayList<course_detail> al=new ArrayList<>();
    mytable table_obj=new mytable();
    public Admin_Manage_Courses() {
        initComponents();
        Dimension d=Toolkit.getDefaultToolkit().getScreenSize();
        
        width=d.width;
        height=d.height;
        
        setSize(width,height);
        setVisible(true);
         getContentPane().setBackground(new Color(51,204,255));
        
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        for(int i=0;i<GlobalClass.category.length;i++)
        {
            jComboBox1.addItem(GlobalClass.category[i]);
            jComboBox2.addItem(GlobalClass.category[i]);
        }
        jTable1.setModel(table_obj);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        j_coursename = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        j_desc = new javax.swing.JTextArea();
        j_price = new javax.swing.JTextField();
        j_wide = new javax.swing.JLabel();
        j_video = new javax.swing.JLabel();
        j_square = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        j_wide_photo = new javax.swing.JButton();
        j_sq_photo = new javax.swing.JButton();
        btn_video = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Category");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 159, 54);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(300, 10, 206, 54);

        jLabel2.setText("Course Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 100, 139, 44);

        j_coursename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_coursenameActionPerformed(evt);
            }
        });
        getContentPane().add(j_coursename);
        j_coursename.setBounds(300, 110, 206, 40);

        jLabel3.setText("Description");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 200, 159, 47);

        jLabel4.setText("Price");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 320, 159, 44);

        jLabel5.setText("Photo Wide");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 410, 120, 50);

        jLabel6.setText("Photo Square");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 480, 153, 38);

        jLabel7.setText("Sample Video");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 540, 127, 47);

        j_desc.setColumns(20);
        j_desc.setRows(5);
        jScrollPane1.setViewportView(j_desc);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(300, 190, 206, 70);
        getContentPane().add(j_price);
        j_price.setBounds(300, 310, 206, 40);
        getContentPane().add(j_wide);
        j_wide.setBounds(150, 410, 260, 40);
        getContentPane().add(j_video);
        j_video.setBounds(160, 538, 250, 40);
        getContentPane().add(j_square);
        j_square.setBounds(150, 470, 260, 40);

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(90, 610, 177, 51);

        j_wide_photo.setText("Choose");
        j_wide_photo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_wide_photoActionPerformed(evt);
            }
        });
        getContentPane().add(j_wide_photo);
        j_wide_photo.setBounds(460, 400, 125, 41);

        j_sq_photo.setText("Choose");
        j_sq_photo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j_sq_photoActionPerformed(evt);
            }
        });
        getContentPane().add(j_sq_photo);
        j_sq_photo.setBounds(460, 470, 133, 46);

        btn_video.setText("Choose");
        btn_video.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_videoActionPerformed(evt);
            }
        });
        getContentPane().add(btn_video);
        btn_video.setBounds(460, 540, 133, 40);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(720, 50, 240, 60);

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(1010, 50, 190, 60);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(630, 140, 570, 390);

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(810, 570, 130, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
       
    
    
    
    
    private void btn_videoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_videoActionPerformed
        // TODO add your handling code here:
        int ans= jfc.showOpenDialog(this);
        if(ans==JFileChooser.APPROVE_OPTION)
            video_obj=jfc.getSelectedFile();
         j_video.setText(video_obj.getAbsolutePath());
    }//GEN-LAST:event_btn_videoActionPerformed

    private void j_wide_photoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_wide_photoActionPerformed
        // TODO add your handling code here:
        int ans= jfc.showOpenDialog(this);
        if(ans==JFileChooser.APPROVE_OPTION)
            wide_image_obj=jfc.getSelectedFile();
        j_wide.setText(wide_image_obj.getAbsolutePath());
    }//GEN-LAST:event_j_wide_photoActionPerformed

    private void j_sq_photoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_sq_photoActionPerformed
        // TODO add your handling code here:
        int ans= jfc.showOpenDialog(this);
        if(ans==JFileChooser.APPROVE_OPTION)
            square_image_obj=jfc.getSelectedFile();
         j_square.setText(square_image_obj.getAbsolutePath());
    }//GEN-LAST:event_j_sq_photoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String category= jComboBox1.getSelectedItem().toString();
        String coursename= j_coursename.getText().toString();
        String desc=j_desc.getText().toString();
        String price =j_price.getText().toString();
        try
        {
        HttpResponse<String> httpres= Unirest.post(GlobalClass.ip+"addcourses")
                                     .queryString("category",category)
                                     .queryString("coursename",coursename)
                                     .queryString("desc",desc)
                                     .queryString("price",price)
                                     .field("wide",wide_image_obj )
                                     .field("square",square_image_obj)
                                     .field("video",video_obj)
                                     .asString();
        
        if(httpres.getStatus()==200)
        {
         String res=httpres.getBody();
         JOptionPane.showMessageDialog(rootPane, res);
         fetch_category(category);
        }
        }
        catch(Exception e)
        {
         e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void j_coursenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j_coursenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j_coursenameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        categoryname=jComboBox2.getSelectedItem().toString();
        fetch_category(categoryname);
        
        
            
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int ans=jTable1.getSelectedRow();
        if(ans==-1){
            JOptionPane.showMessageDialog(rootPane,"Select Row First");
        }
        else
        {
        JOptionPane.showMessageDialog(rootPane," Delete..."+al.get(ans).coursename);
            try {
                HttpResponse<String>httpres=Unirest.get(GlobalClass.ip+"deletecourses")
                        .queryString("name",al.get(ans).coursename)
                        .asString();
                
                if(httpres.getStatus()==200)
                {
                 String res=httpres.getBody();
                 JOptionPane.showMessageDialog(rootPane, res);
                 
                 fetch_category(categoryname);
                }
            } catch (Exception e) {
               // Logger.getLogger(Admin_Manage_Courses.class.getName()).log(Level.SEVERE, null, ex);
           e.printStackTrace();
            }
        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Manage_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Manage_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Manage_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Manage_Courses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Manage_Courses().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_video;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField j_coursename;
    private javax.swing.JTextArea j_desc;
    private javax.swing.JTextField j_price;
    private javax.swing.JButton j_sq_photo;
    private javax.swing.JLabel j_square;
    private javax.swing.JLabel j_video;
    private javax.swing.JLabel j_wide;
    private javax.swing.JButton j_wide_photo;
    // End of variables declaration//GEN-END:variables
 class mytable extends AbstractTableModel
 {
        String arr[]={"Name","Description","Price"};
        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
         return arr.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
          //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
       if(columnIndex==0)
       {
         return al.get(rowIndex).coursename;
       }
       else if(columnIndex==1)
       {
        return al.get(rowIndex).desc;
       }
       else if(columnIndex==2)
       {
        return al.get(rowIndex).price;
       }
       else
       {
        return "default";
       }
        }

        @Override
        public String getColumnName(int column) {
            //return super.getColumnName(column); //To change body of generated methods, choose Tools | Templates.
        
        return arr[column];
        }
         
 
 
 }
 public void fetch_category(String categoryname)
 
 {
    // al.clear();
  try {
      al.clear();
            HttpResponse<String> httpres=Unirest.get(GlobalClass.ip+"fetch_courses")
                    .queryString("categoryname",categoryname)
                    .asString();
            
            if(httpres.getStatus()==200){
            String res=httpres.getBody();
                System.out.println(""+res);
            
                StringTokenizer st=new StringTokenizer(res,"~~");
                while(st.hasMoreTokens())
                {
                 String res2=st.nextToken();
                 StringTokenizer st2=new StringTokenizer(res2,";;");
                         String coursename=st2.nextToken();
                         String desc=st2.nextToken();
                         String photowide=st2.nextToken();
                         String photosquare=st2.nextToken();
                         String video=st2.nextToken();
                         int price=Integer.parseInt(st2.nextToken());
                         
                         System.out.println(""+coursename);
                         al.add(new course_detail(coursename, desc,photowide,photosquare,video,price));
                }
                System.out.println(""+al.size());
                table_obj.fireTableDataChanged();
        }
        } catch (UnirestException ex) {
            Logger.getLogger(Admin_Manage_Courses.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
 }
 
 
 
 
 }
